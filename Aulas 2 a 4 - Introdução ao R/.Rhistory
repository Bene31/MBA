geom_bar(aes(x = perfil), color = "darkorchid", fill = "orange") +
geom_text(aes(x = perfil, label = ..count..), stat = "count") +
labs(title = "Perfil dos Investidores",
subtitle = "Banco X",
x = "Perfil do Investidor",
y = "Quantidade",
caption = "Período: 2021") +
theme_light()
ggplot(data = perfil_investidor) +
geom_bar(aes(x = perfil), color = "darkorchid", fill = "orange") +
geom_text(aes(x = perfil, label = ..count..),
stat = "count", vjust = -1) +
labs(title = "Perfil dos Investidores",
subtitle = "Banco X",
x = "Perfil do Investidor",
y = "Quantidade",
caption = "Período: 2021") +
theme_light()
ggplot(data = perfil_investidor) +
geom_bar(aes(x = perfil), color = "darkorchid", fill = "orange") +
geom_text(aes(x = perfil, label = ..count..), stat = "count", hjust = -1) +
labs(title = "Perfil dos Investidores",
subtitle = "Banco X",
x = "Perfil do Investidor",
y = "Quantidade",
caption = "Período: 2021") +
coord_flip() +
theme_light()
ggplot(data = perfil_investidor) +
geom_bar(aes(x = fct_rev(perfil)), color = "darkorchid", fill = "orange") +
geom_text(aes(x = perfil, label = ..count..),
stat = "count", hjust = -1) +
labs(title = "Perfil dos Investidores",
subtitle = "Banco X",
x = "Perfil do Investidor",
y = "Quantidade",
caption = "Período: 2021") +
coord_flip() +
theme_light()
ggplot(data = perfil_investidor) +
geom_bar(aes(x = perfil), color = "darkorchid", fill = "orange") +
geom_text(aes(x = perfil, label = ..count.., stat = "count"),
vjust = -1) +
labs(title = "Perfil dos Investidores",
subtitle = "Banco X",
x = "Perfil do Investidor",
y = "Quantidade",
caption = "Período: 2021") +
theme_light()
ggplot(data = perfil_investidor) +
geom_bar(aes(x = perfil), color = "darkorchid", fill = "orange") +
geom_text(aes(x = perfil, label = ..count..),
stat = "count", vjust = -1) +
labs(title = "Perfil dos Investidores",
subtitle = "Banco X",
x = "Perfil do Investidor",
y = "Quantidade",
caption = "Período: 2021") +
theme_light()
load("dados_sp.RData")
ggplot(data = dados_sp) +
geom_histogram(aes(x = idh))
ggplot(data = dados_sp) +
geom_histogram(aes(x = idh), fill = "darkorchid")
ggplot(data = dados_sp) +
geom_histogram(aes(x = idh), fill = "darkorchid") +
theme_minimal()
ggplot(data = dados_sp) +
geom_histogram(aes(x = idh), fill = "darkorchid", color = "black") +
labs(x = "IDH dos Municípios de SP",
y = "Frequência") +
theme_minimal()
ggplot(data = dados_sp) +
geom_histogram(aes(x = pib), fill = "darkorchid",
color = "black", bins = 100) +
labs(x = "PIB dos Municípios de SP",
y = "Frequência") +
theme_minimal()
load("atlas_ambiental.RData")
load("atlas_ambiental.RData")
ggplot(atlas_ambiental) +
geom_point(aes(x = renda, y = escolaridade))
ggplot(atlas_ambiental) +
geom_point(aes(x = renda, y = escolaridade, size = idade))
ggplot(atlas_ambiental) +
geom_point(aes(x = renda, y = escolaridade,
size = idade, color = favel < 6))
ggplot(atlas_ambiental) +
geom_point(aes(x = renda, y = escolaridade,
size = idade, color = favel < 6,
shape = mortalidade > 18)) +
labs(title = "Indicadores dos Distritos do Município de São Paulo",
x = "Renda",
y = "Escolaridade") +
theme_bw()
View(atlas_ambiental)
ggplot(atlas_ambiental) +
geom_point(aes(x = renda, y = escolaridade,
size = idade, color = favel < 6,
shape = mortalidade > 18)) +
geom_smooth(aes(x = renda, y = escolaridade),
method = "loess", se = FALSE) +
labs(title = "Indicadores dos Distritos do Município de São Paulo",
x = "Renda",
y = "Escolaridade") +
theme_bw()
load("fisman_miguel.RData")
ggplot(fisman_miguel) +
geom_point(aes(x = corruption, y = violations)) +
geom_smooth(aes(x = corruption, y = violations),
se = FALSE,
method = "loess") +
geom_text(aes(x = corruption, y = violations, label = code))
ggplot(fisman_miguel) +
geom_point(aes(x = corruption, y = log(violations))) +
geom_smooth(aes(x = corruption, y = log(violations)),
se = F,
method = "loess") +
geom_text(aes(x = corruption, y = log(violations), label = code))
ggplot(fisman_miguel) +
geom_point(aes(x = corruption, y = log(violations))) +
geom_smooth(aes(x = corruption, y = log(violations)),
se = F,
method = "loess") +
geom_text(aes(x = corruption, y = log(violations), label = code)) +
facet_wrap(~post) +
theme_bw()
ggplot(fisman_miguel) +
geom_point(aes(x = corruption, y = log(violations))) +
geom_smooth(aes(x = corruption, y = log(violations)),
se = F, method = "loess") +
geom_text_repel(aes(x = corruption, y = log(violations), label = code)) +
facet_wrap(~post) +
theme_bw()
load("covid_110521.RData")
ggplot(covid_110521) +
geom_line(aes(x = t, y = cumulative_cases))
ggplot(covid_110521) +
geom_line(aes(x = t, y = cumulative_cases, color = country))
ggplot(covid_110521) +
geom_line(aes(x = t, y = cumulative_cases, color = country)) +
geom_point(aes(x = t, y = cumulative_cases, color = country)) +
labs(x = "Tempo em dias desde o primeiro caso oficial do Sars-Cov-2 reportado",
y = "Casos Cumulativos",
color = "País") +
theme_bw()
covid_110521["log_ccases"] <- log10(covid_110521$cumulative_cases)
ggplot(covid_110521) +
geom_line(aes(x = t, y = log_ccases, color = country)) +
geom_point(aes(x = t, y = log_ccases, color = country)) +
labs(x = "Tempo em dias desde o primeiro caso oficial do Sars-Cov-2 reportado",
y = "Log10 Casos Cumulativos",
color = "País") +
theme_bw()
covid_110521["log_ccases"] <- log10(covid_110521$cumulative_cases)
ggplot(covid_110521) +
geom_line(aes(x = t, y = log_ccases, color = country)) +
geom_point(aes(x = t, y = log_ccases, color = country)) +
labs(x = "Tempo em dias desde o primeiro caso oficial do Sars-Cov-2 reportado",
y = "Log10 Casos Cumulativos",
color = "País") +
theme_bw()
covid_110521["pop_ccases"] <- covid_110521$cumulative_cases /
covid_110521$pop
ggplot(covid_110521) +
geom_line(aes(x = t, y = pop_ccases, color = country)) +
geom_point(aes(x = t, y = pop_ccases, color = country)) +
labs(x = "Tempo em dias desde o primeiro caso oficial do Sars-Cov-2 reportado",
y = "Casos Cumulativos",
color = "País") +
theme_bw()
ggplot(covid_110521) +
geom_line(aes(x = t, y = cumulative_cases, color = country)) +
geom_point(aes(x = t, y = cumulative_cases, color = country)) +
geom_text(aes(x = t, y = cumulative_cases, label = cumulative_cases),
color = "black", size = 2) +
labs(x = "Tempo em dias desde o primeiro caso oficial do Sars-Cov-2 reportado",
y = "Casos Cumulativos",
color = "País") +
theme_bw()
ggplot(covid_110521) +
geom_line(aes(x = t, y = cumulative_cases, color = country)) +
geom_point(aes(x = t, y = cumulative_cases, color = country)) +
geom_text(aes(x = t, y = cumulative_cases, label = cumulative_cases),
color = "black", size = 2, vjust = -1) +
labs(x = "Tempo em dias desde o primeiro caso oficial do Sars-Cov-2 reportado",
y = "Casos Cumulativos",
color = "País") +
theme_bw()
ggplot(covid_110521) +
geom_line(aes(x = t, y = cumulative_cases, color = country)) +
geom_point(aes(x = t, y = cumulative_cases, color = country)) +
geom_text(aes(x = t, y = cumulative_cases, label = cumulative_cases),
color = "black", size = 2, vjust = -1, angle = 45) +
labs(x = "Tempo em dias desde o primeiro caso oficial do Sars-Cov-2 reportado",
y = "Casos Cumulativos",
color = "País") +
theme_bw()
ggplot(covid_110521) +
geom_line(aes(x = t, y = cumulative_cases, color = country)) +
geom_point(aes(x = t, y = cumulative_cases, color = country)) +
geom_text_repel(aes(x = t, y = cumulative_cases, label = cumulative_cases),
color = "black", size = 2) +
labs(x = "Tempo em dias desde o primeiro caso oficial do Sars-Cov-2 reportado",
y = "Casos Cumulativos",
color = "País") +
theme_bw()
ggplotly(
ggplot(covid_110521) +
geom_line(aes(x = t, y = cumulative_cases, color = country)) +
geom_point(aes(x = t, y = cumulative_cases, color = country)) +
labs(x = "Tempo em dias desde o primeiro caso oficial do Sars-Cov-2 reportado",
y = "Casos Cumulativos",
color = "País") +
theme_bw()
)
ggplotly(
ggplot(covid_110521) +
geom_line(aes(x = t, y = cumulative_cases, color = country)) +
geom_point(aes(x = t, y = cumulative_cases, color = country)) +
labs(x = "Tempo em dias desde o primeiro caso oficial do Sars-Cov-2 reportado",
y = "Casos Cumulativos",
color = "País") +
theme_bw()
)
ggplotly(
ggplot(covid_110521) +
geom_line(aes(x = t, y = daily_cases, color = country)) +
geom_point(aes(x = t, y = daily_cases, color = country)) +
labs(x = "Tempo em dias desde o primeiro caso oficial do Sars-Cov-2 reportado",
y = "Casos Diários",
color = "País") +
theme_bw()
)
ggplot(covid_110521) +
geom_line(aes(x = t, y = cumulative_cases, color = country)) +
geom_point(aes(x = t, y = cumulative_cases, color = country)) +
labs(x = "Tempo em dias desde o primeiro caso oficial do Sars-Cov-2 reportado",
y = "Casos Cumulativos",
color = "País") +
theme_bw()
ggplotly(
ggplot(covid_110521) +
geom_line(aes(x = t, y = cumulative_cases, color = country)) +
geom_point(aes(x = t, y = cumulative_cases, color = country)) +
labs(x = "Tempo em dias desde o primeiro caso oficial do Sars-Cov-2 reportado",
y = "Casos Cumulativos",
color = "País") +
theme_bw()
)
ggplotly(
ggplot(covid_110521) +
geom_line(aes(x = t, y = cumulative_cases, color = country)) +
geom_point(aes(x = t, y = cumulative_cases, color = country)) +
labs(x = "Tempo em dias desde o primeiro caso oficial do Sars-Cov-2 reportado",
y = "Casos Cumulativos",
color = "País") +
theme_bw()
ggplotly(
ggplot(covid_110521) +
geom_line(aes(x = t, y = cumulative_cases, color = country)) +
geom_point(aes(x = t, y = cumulative_cases, color = country)) +
labs(x = "Tempo em dias desde o primeiro caso oficial do Sars-Cov-2 reportado",
y = "Casos Cumulativos",
color = "País") +
theme_bw()
)
ggplot(covid_110521) +
geom_line(aes(x = t, y = cumulative_cases, color = country)) +
geom_point(aes(x = t, y = cumulative_cases, color = country)) +
labs(x = "Tempo em dias desde o primeiro caso oficial do Sars-Cov-2 reportado",
y = "Casos Cumulativos",
color = "País") +
theme_bw()
ggplotly(
ggplot(covid_110521) +
geom_line(aes(x = t, y = cumulative_cases, color = country)) +
geom_point(aes(x = t, y = cumulative_cases, color = country)) +
labs(x = "Tempo em dias desde o primeiro caso oficial do Sars-Cov-2 reportado",
y = "Casos Cumulativos",
color = "País") +
theme_bw()
)
library(ggplotly)
install.packages("ggplotly")
library(ggplotly)
ggplotly(
ggplot(covid_110521) +
geom_line(aes(x = t, y = cumulative_cases, color = country)) +
geom_point(aes(x = t, y = cumulative_cases, color = country)) +
labs(x = "Tempo em dias desde o primeiro caso oficial do Sars-Cov-2 reportado",
y = "Casos Cumulativos",
color = "País") +
theme_bw()
)
library(plotly)
ggplotly(
ggplot(covid_110521) +
geom_line(aes(x = t, y = cumulative_cases, color = country)) +
geom_point(aes(x = t, y = cumulative_cases, color = country)) +
labs(x = "Tempo em dias desde o primeiro caso oficial do Sars-Cov-2 reportado",
y = "Casos Cumulativos",
color = "País") +
theme_bw()
)
chart.Correlation(atlas_ambiental[, 3:11], histogram = T)
matriz_correlacoes <- cor(atlas_ambiental[, 3:11])
matriz_correlacoes
correlacoes <- melt(matriz_correlacoes)
head(correlacoes)
tail(correlacoes)
View(correlacoes)
head(correlacoes)
head(correlacoes)
tail(correlacoes)
ggplotly(
ggplot(covid_110521) +
geom_line(aes(x = t, y = cumulative_cases, color = country)) +
geom_point(aes(x = t, y = cumulative_cases, color = country)) +
labs(x = "Tempo em dias desde o primeiro caso oficial do Sars-Cov-2 reportado",
y = "Casos Cumulativos",
color = "País") +
theme_bw()
)
names(correlacoes) <- c("var1", "var2", "correlacao")
correlacoes
correlacoes
ggplot(correlacoes) +
geom_tile(aes(x = var1, y = var2, fill = correlacao))
ggplot(correlacoes) +
geom_tile(aes(x = var1, y = var2, fill = correlacao)) +
labs(x = NULL,
y = NULL,
fill = "Correlações")
ggplot(correlacoes) +
geom_tile(aes(x = var1, y = var2, fill = correlacao)) +
labs(x = NULL,
y = NULL,
fill = "Correlações") +
scale_fill_gradient2(low = "darkblue",
mid = "white",
high = "darkred",
midpoint = 0)
ggplot(correlacoes) +
geom_tile(aes(x = var1, y = var2, fill = correlacao)) +
geom_text(aes(x = var1, y = var2, label = correlacao), size = 2) +
labs(x = NULL,
y = NULL,
fill = "Correlações") +
scale_fill_gradient2(low = "darkblue",
mid = "white",
high = "darkred",
midpoint = 0)
ggplot(correlacoes) +
geom_tile(aes(x = var1, y = var2, fill = correlacao)) +
geom_text(aes(x = var1, y = var2, label = round(correlacao, digits = 3)),
size = 3) +
labs(x = NULL,
y = NULL,
fill = "Correlações") +
scale_fill_gradient2(low = "darkblue",
mid = "white",
high = "darkred",
midpoint = 0) +
theme_bw()
ggplotly(
ggplot(correlacoes) +
geom_tile(aes(x = var1, y = var2, fill = correlacao)) +
geom_text(aes(x = var1, y = var2,
label = round(correlacao, digits = 3)),
size = 3) +
labs(x = NULL,
y = NULL,
fill = "Correlações") +
scale_fill_gradient2(low = "darkblue",
mid = "white",
high = "darkred",
midpoint = 0) +
theme_bw()
)
ggplotly(
ggplot(correlacoes) +
geom_tile(aes(x = var1, y = var2, fill = correlacao)) +
geom_text(aes(x = var1, y = var2,
label = round(correlacao, digits = 3)),
size = 3) +
labs(x = NULL,
y = NULL,
fill = "Correlações") +
scale_fill_gradient2(low = "darkblue",
mid = "white",
high = "darkred",
midpoint = 0) +
theme_bw()
)
ggplot(correlacoes) +
geom_tile(aes(x = var1, y = var2, fill = correlacao)) +
geom_text(aes(x = var1, y = var2, label = round(correlacao,
digits = 3)),
size = 3) +
labs(x = NULL,
y = NULL,
fill = "Correlações") +
scale_fill_gradient2(low = "darkblue",
mid = "white",
high = "darkred",
midpoint = 0) +
theme(panel.background = element_rect("white"),
panel.grid = element_line("grey95"),
panel.border = element_rect(NA),
legend.position = "bottom",
axis.text.x = element_text(angle = 0))
ggplot(correlacoes) +
geom_tile(aes(x = var1, y = var2, fill = correlacao)) +
geom_text(aes(x = var1, y = var2, label = round(correlacao,
digits = 3)),
size = 3) +
labs(x = NULL,
y = NULL,
fill = "Correlações") +
scale_fill_gradient2(low = "darkblue",
mid = "white",
high = "darkred",
midpoint = 0) +
theme(panel.background = element_rect("white"),
panel.grid = element_line("grey95"),
panel.border = element_rect(NA),
legend.position = "bottom",
axis.text.x = element_text(angle = 0))
atlas_long <- melt(atlas_ambiental[, 2:11], id.vars = "distritos")
head(atlas_long)
tail(atlas_long)
ggplot(atlas_long) +
geom_boxplot(aes(x = variable, y = value, fill = variable))
atlas_padronizado <- atlas_ambiental
atlas_padronizado[, 3:11] <- scale(atlas_padronizado[, 3:11])
head(atlas_padronizado)
tail(atlas_padronizado)
atlas_padronizado_long <- melt(atlas_padronizado[, 2:11],
id.vars = "distritos")
head(atlas_padronizado_long)
ggplot(atlas_padronizado_long) +
geom_boxplot(aes(x = variable, y = value, fill = variable))
ggplot(atlas_padronizado_long) +
geom_boxplot(aes(x = variable, y = value, fill = variable)) +
labs(x = "Variáveis",
y = "Valores") +
theme(panel.background = element_rect("white"),
panel.grid = element_line("grey95"),
panel.border = element_rect(NA),
legend.position = "none",
axis.text.x = element_text(angle = 90))
ggplot(atlas_padronizado_long) +
geom_boxplot(aes(x = variable, y = value, fill = variable)) +
geom_point(aes(x = variable, y = value), alpha = 0.1) +
labs(x = "Variáveis",
y = "Valores") +
theme(panel.background = element_rect("white"),
panel.grid = element_line("grey95"),
panel.border = element_rect(NA),
legend.position = "none",
axis.text.x = element_text(angle = 90))
ggplotly(
ggplot(atlas_padronizado_long) +
geom_boxplot(aes(x = variable, y = value, fill = variable)) +
labs(x = "Variáveis",
y = "Valores") +
theme_bw()
)
ggplotly(
ggplot(atlas_padronizado_long) +
geom_boxplot(aes(x = variable, y = value, fill = variable)) +
labs(x = "Variáveis",
y = "Valores") +
theme_bw()
)
vetor <- 10
if(vetor + 2 = 11){
print("oi!")
} else {
print("voltei!")
}
if(vetor + 2 = 11){
print("oi!")
} else {
print("voltei!")
}
if(vetor + 2 == 11){
print("oi!")
} else {
print("voltei!")
}
if(vetor + 2 == 11){
print("oi!")
} else {
print("voltei!")
}
if(vetor + 2 = 11){
print("oi!")
} else {
print("voltei!")
}
clima <- "chuvoso"
if(clima != "ensolarado"){
print("Vamos passear!")
} else {
print("Vamos dormir.")
}
ggplot(covid_110521) +
geom_line(aes(x = t, y = cumulative_cases))+
theme_classic()
View(covid_110521)
