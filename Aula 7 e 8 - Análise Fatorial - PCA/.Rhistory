theme_bw()
# Scree Plot - apenas ignorar os warnings
ggplotly(
fviz_eig(X = afpc,
ggtheme = theme_bw(),
barcolor = "black",
barfill = "dodgerblue4",
linecolor = "darkgoldenrod3")
)
# Extraindo as Cargas Fatoriais
k <- sum((afpc$sdev ^ 2) > 1) #número de variáveis presentes na base de dados -> número de fatores retido no critério da raiz latente
cargas_fatoriais <- afpc$rotation[, 1:k] %*% diag(afpc$sdev[1:k])
# Visualizando as cargas fatoriais
data.frame(cargas_fatoriais) %>%
rename(F1 = X1,
F2 = X2) %>%
kable() %>%
kable_styling(bootstrap_options = "striped",
full_width = T,
font_size = 12)
#Visualizando as Comunalidades
data.frame(rowSums(cargas_fatoriais ^ 2)) %>%
rename(comunalidades = 1) %>%
kable() %>%
kable_styling(bootstrap_options = "striped",
full_width = T,
font_size = 12)
# Relatório das cargas fatoriais e das comunalidades
data.frame(cargas_fatoriais) %>%
rename(F1 = X1,
F2 = X2) %>%
mutate(Comunalidades = rowSums(cargas_fatoriais ^ 2)) %>%
kable() %>%
kable_styling(bootstrap_options = "striped",
full_width = T,
font_size = 12)
0.8953501 - 0.0067291
(0.8953501 - 0.0067291) / 2
# Plotagem das Cargas Fatoriais
data.frame(cargas_fatoriais) %>%
ggplot(aes(x = X1, y = X2)) +
geom_point(color = "dodgerblue4") +
geom_hline(yintercept = 0, color = "darkgoldenrod3", linetype = "dashed") +
geom_vline(xintercept = 0, color = "darkgoldenrod3", linetype = "dashed") +
geom_text_repel(label = row.names(cargas_fatoriais)) +
labs(x = paste("F1", paste0("(",
round(summary(afpc)$importance[2,1] * 100,
digits = 2),
"%)")),
y = paste("F2", paste0("(",
round(summary(afpc)$importance[2,2] * 100,
digits = 2),
"%)"))) +
theme_bw()
# Scores Fatoriais
scores_fatoriais <- t(afpc$rotation)/afpc$sdev # t = transposição matricial
colnames(scores_fatoriais) <- colnames(notasfatorial_std)
scores_fatoriais
scores_fatoriais %>%
t() %>%
data.frame() %>%
rename(PC1 = 1,
PC2 = 2) %>%
select(PC1, PC2) %>%
kable() %>%
kable_styling(bootstrap_options = "striped",
full_width = T,
font_size = 12)
summary(pca_arquivo02)
#Visualizando os pesos que cada variável tem em cada componente principal
#obtido pela PCA
data.frame(pca_arquivo02$rotation) %>%
mutate(var = names(pca_arquivo02$center)) %>%
melt(id.vars = "var") %>%
mutate(var = factor(var)) %>%
ggplot(aes(x = var, y = value, fill = var)) +
geom_bar(stat = "identity", color = "black") +
facet_wrap(~variable) +
labs(x = NULL, y = NULL, fill = "Legenda:") +
scale_fill_viridis_d() +
theme_bw()
# Scree Plot - apenas ignorar os warnings
ggplotly(
fviz_eig(X = pca_arquivo02,
ggtheme = theme_bw(),
barcolor = "black",
barfill = "dodgerblue4",
linecolor = "darkgoldenrod3")
)
# Extraindo as Cargas Fatoriais
k_pca_arquivo02 <- sum((pca_arquivo02$sdev ^ 2) > 1) #número de variáveis presentes na base de dados -> número de fatores retido no critério da raiz latente
cargas_fatoriais_pca_arquivo02 <- pca_arquivo02$rotation[, 1:k_pca_arquivo02] %*% diag(pca_arquivo02$sdev[1:k_pca_arquivo02])
# Visualizando as cargas fatoriais
data.frame(cargas_fatoriais_pca_arquivo02) %>%
rename(F1 = X1,
F2 = X2) %>%
kable() %>%
kable_styling(bootstrap_options = "striped",
full_width = T,
font_size = 12)
#Visualizando as Comunalidades
data.frame(rowSums(cargas_fatoriais_pca_arquivo02 ^ 2)) %>%
rename(comunalidades = 1) %>%
kable() %>%
kable_styling(bootstrap_options = "striped",
full_width = T,
font_size = 12)
#Visualizando as Comunalidades
data.frame(rowSums(cargas_fatoriais_pca_arquivo02 ^ 2)) %>%
rename(comunalidades = 1) %>%
kable() %>%
kable_styling(bootstrap_options = "striped",
full_width = T,
font_size = 12)
# Relatório das cargas fatoriais e das comunalidades
data.frame(cargas_fatoriais_pca_arquivo02) %>%
rename(F1 = X1,
F2 = X2) %>%
mutate(Comunalidades = rowSums(cargas_fatoriais_pca_arquivo02 ^ 2)) %>%
kable() %>%
kable_styling(bootstrap_options = "striped",
full_width = T,
font_size = 12)
0.1735888 - 0.9179228
# Plotagem das Cargas Fatoriais
data.frame(cargas_fatoriais_pca_arquivo02) %>%
ggplot(aes(x = X1, y = X2)) +
geom_point(color = "dodgerblue4") +
geom_hline(yintercept = 0, color = "darkgoldenrod3", linetype = "dashed") +
geom_vline(xintercept = 0, color = "darkgoldenrod3", linetype = "dashed") +
geom_text_repel(label = row.names(cargas_fatoriais_pca_arquivo02)) +
labs(x = paste("F1", paste0("(",
round(summary(afpc)$importance[2,1] * 100,
digits = 2),
"%)")),
y = paste("F2", paste0("(",
round(summary(afpc)$importance[2,2] * 100,
digits = 2),
"%)"))) +
theme_bw()
# Scores Fatoriais
scores_fatoriais_pca_arquivo02 <- t(pca_arquivo02$rotation)/pca_arquivo02$sdev # t = transposição matricial
colnames(scores_fatoriais_pca_arquivo02) <- colnames(pca_arquivo02)
scores_fatoriais_pca_arquivo02
scores_fatoriais_pca_arquivo02 %>%
t() %>%
data.frame() %>%
rename(PC1 = 1,
PC2 = 2) %>%
select(PC1, PC2) %>%
kable() %>%
kable_styling(bootstrap_options = "striped",
full_width = T,
font_size = 12)
#Assumindo-se apenas o F1 e F2 como indicadores, calculam-se os scores
#fatorias
score_D1 <- scores_fatoriais_pca_arquivo02[1,]
score_D1
score_D2 <- scores_fatoriais_pca_arquivo02[2,]
score_D2
#Estabelecendo o ranking dos indicadores assumido
F1 <- t(apply(pca_arquivo02, 1, function(x) x * score_D1))
F2 <- t(apply(pca_arquivo02, 1, function(x) x * score_D2))
#Calculando a variância compartilhada
var_compartilhada_pca_arquivo02 <- (pca_arquivo02$sdev ^ 2/sum(pca_arquivo02$sdev ^ 2))
var_compartilhada_pca_arquivo02
0.478123625 + 0.281739168 + 0.117938134 + 0.074580904 + 0.026785614 + 0.015696233 + 0.003131185 + 0.002005137
0.478123625^2 + 0.281739168^2 + 0.117938134^2 + 0.074580904^2 + 0.026785614^2 + 0.015696233^2 + 0.003131185^2 + 0.002005137^2
notasfatorial_pca_arquivo02 %>%
mutate(pontuacao = Fator1 * var_compartilhada[1] +
Fator2 * var_compartilhada[2]) -> notasfatorial
# Importando as colunas de fatores F1 e F2
notasfatorial_pca_arquivo02["Fator1"] <- F1$fator1
#Estabelecendo o ranking dos indicadores assumido
F1 <- t(apply(pca_arquivo02, 1, function(x) x * score_D1))
view(pca_arquivo03)
summary(pca_arquivo03)
load("pca_arquivo03.RData")
view(pca_arquivo03)
afpc_03 <- prcomp(pca_arquivo03)
summary(pca_arquivo03)
k <- sum((pca_arquivo03$sdev ^ 2) > 1) #número de variáveis presentes na base de dados -> número de fatores retido no critério da raiz latente
cargas_fatoriais_pca_arquivo03_4f <- pca_arquivo03$rotation[, 1:4] %*% diag(pca_arquivo03$sdev[1:4])
view(pca_arquivo03)
view(pca_arquivo03)
summary(pca_arquivo02)
# Extraindo as Cargas Fatoriais
k_pca_arquivo02 <- sum((pca_arquivo02$sdev ^ 2) > 1) #número de variáveis presentes na base de dados -> número de fatores retido no critério da raiz latente
cargas_fatoriais_pca_arquivo02 <- pca_arquivo02$rotation[, 1:k_pca_arquivo02] %*% diag(pca_arquivo02$sdev[1:k_pca_arquivo02])
# Visualizando as cargas fatoriais
data.frame(cargas_fatoriais_pca_arquivo02) %>%
rename(F1 = X1,
F2 = X2) %>%
kable() %>%
kable_styling(bootstrap_options = "striped",
full_width = T,
font_size = 12)
1.9558^2
rho_arquivo02
cortest.bartlett(R = rho_arquivo02)
ggplotly(
fviz_eig(X = rho_arquivo02,
ggtheme = theme_bw(),
barcolor = "black",
barfill = "dodgerblue4",
linecolor = "darkgoldenrod3")
)
summary(rho_arquivo02)
data.frame(cargas_fatoriais_rho_arquivo02) %>%
rename(F1 = X1,
F2 = X2) %>%
kable() %>%
kable_styling(bootstrap_options = "striped",
full_width = T,
font_size = 12)
k_rho_arquivo02 <- sum((rho_arquivo02$sdev ^ 2) > 1) #número de variáveis presentes na base de dados -> número de fatores retido no critério da raiz latente
summary(rho_arquivo02)
k_rho_arquivo02 <- sum((rho_arquivo02$sdev ^ 2) > 1) #número de variáveis presentes na base de dados -> número de fatores retido no critério da raiz latente
rho_arquivo02
View(rho_arquivo02)
k_rho_arquivo01 <- sum((rho_arquivo01$sdev ^ 2) > 1) #número de variáveis presentes na base de dados -> número de fatores retido no critério da raiz latente
k1 <- sum((pca_arquivo01$sdev ^ 2) > 1) #número de variáveis presentes na base de dados -> número de fatores retido no critério da raiz latente
load("pca_arquivo02.RData")
summary(pca_arquivo02)
# Extraindo as Cargas Fatoriais
kpca_arquivo02 <- sum((pca_arquivo02$sdev ^ 2) > 1) #número de variáveis presentes na base de dados -> número de fatores retido no critério da raiz latente
cargas_fatoriais_pca_arquivo03_4f <- pca_arquivo03$rotation[, 1:4] %*% diag(pca_arquivo03$sdev[1:4])
summary(pca_arquivo03)
load("pca_arquivo01.RData")
summary(pca_arquivo01)
2.2262^2
load("pca_arquivo02.RData")
summary(pca_arquivo02)
data.frame(pca_arquivo02$rotation) %>%
mutate(var = names(pca_arquivo02$center)) %>%
melt(id.vars = "var") %>%
mutate(var = factor(var)) %>%
ggplot(aes(x = var, y = value, fill = var)) +
geom_bar(stat = "identity", color = "black") +
facet_wrap(~variable) +
labs(x = NULL, y = NULL, fill = "Legenda:") +
scale_fill_viridis_d() +
theme_bw()
ggplotly(
fviz_eig(X = pca_arquivo02,
ggtheme = theme_bw(),
barcolor = "black",
barfill = "dodgerblue4",
linecolor = "darkgoldenrod3")
)
kpca_arquivo02 <- sum((pca_arquivo02$sdev ^ 2) > 1) #número de variáveis presentes na base de dados -> número de fatores retido no critério da raiz latente
cargas_fatoriais2 <- pca_arquivo02$rotation[, 1:kpca_arquivo02] %*% diag(pca_arquivo02$sdev[1:kpca_arquivo02])
cargas_fatoriais2
data.frame(cargas_fatoriais2) %>%
rename(F1 = X1,
F2 = X2) %>%
kable() %>%
kable_styling(bootstrap_options = "striped",
full_width = T,
font_size = 12)
data.frame(rowSums(cargas_fatoriais2 ^ 2)) %>%
rename(comunalidades = 1) %>%
kable() %>%
kable_styling(bootstrap_options = "striped",
full_width = T,
font_size = 12)
data.frame(rowSums(cargas_fatoriais2 ^ 2)) %>%
rename(comunalidades = 1) %>%
kable() %>%
kable_styling(bootstrap_options = "striped",
full_width = T,
font_size = 12)
# Relatório das cargas fatoriais e das comunalidades
data.frame(cargas_fatoriais2) %>%
rename(F1 = X1,
F2 = X2) %>%
mutate(Comunalidades = rowSums(cargas_fatoriais2 ^ 2)) %>%
kable() %>%
kable_styling(bootstrap_options = "striped",
full_width = T,
font_size = 12)
# Plotagem das Cargas Fatoriais
data.frame(cargas_fatoriais2) %>%
ggplot(aes(x = X1, y = X2)) +
geom_point(color = "dodgerblue4") +
geom_hline(yintercept = 0, color = "darkgoldenrod3", linetype = "dashed") +
geom_vline(xintercept = 0, color = "darkgoldenrod3", linetype = "dashed") +
geom_text_repel(label = row.names(cargas_fatoriais2)) +
labs(x = paste("F1", paste0("(",
round(summary(pca_arquivo02)$importance[2,1] * 100,
digits = 2),
"%)")),
y = paste("F2", paste0("(",
round(summary(pca_arquivo02)$importance[2,2] * 100,
digits = 2),
"%)"))) +
theme_bw()
# Scores Fatoriais
scores_fatoriais2 <- t(pca_arquivo02$rotation)/pca_arquivo02$sdev # t = transposição matricial
scores_fatoriais2
cargas_fatoriais2 <- pca_arquivo02$rotation[, 1:kpca_arquivo02] %*% diag(pca_arquivo02$sdev[1:kpca_arquivo02])
cargas_fatoriais2t <- pca_arquivo02$rotation[, 1:8] %*% diag(pca_arquivo02$sdev[1:8])
data.frame(cargas_fatoriais2t) %>%
rename(F1 = X1,
F2 = X2) %>%
kable() %>%
kable_styling(bootstrap_options = "striped",
full_width = T,
font_size = 12)
data.frame(cargas_fatoriais_rho_arquivo01) %>%
rename(F1 = X1,
F2 = X2) %>%
kable() %>%
kable_styling(bootstrap_options = "striped",
full_width = T,
font_size = 12)
load("rho_arquivo01.RData")
rho_arquivo01
data.frame(cargas_fatoriais_rho_arquivo01) %>%
rename(F1 = X1,
F2 = X2) %>%
kable() %>%
kable_styling(bootstrap_options = "striped",
full_width = T,
font_size = 12)
data.frame(rho_arquivo01) %>%
rename(F1 = X1,
F2 = X2) %>%
kable() %>%
kable_styling(bootstrap_options = "striped",
full_width = T,
font_size = 12)
cortest.bartlett(R = rho_arquivo01)
View(pca_arquivo03)
1.9558^2
sqrt(1.9558)
summary(pca_arquivo02)
1.9558 - 0.4781
load("pca_arquivo02.RData")
summary(pca_arquivo02)
kpca_arquivo02 <- sum((pca_arquivo02$sdev ^ 2) > 1) #número de variáveis presentes na base de dados -> número de fatores retido no critério da raiz latente
cargas_fatoriais2t <- pca_arquivo02$rotation[, 1:8] %*% diag(pca_arquivo02$sdev[1:8])
# Relatório das cargas fatoriais e das comunalidades
data.frame(cargas_fatoriais2) %>%
rename(F1 = X1,
F2 = X2) %>%
mutate(Comunalidades = rowSums(cargas_fatoriais2 ^ 2)) %>%
kable() %>%
kable_styling(bootstrap_options = "striped",
full_width = T,
font_size = 12)
data.frame(cargas_fatoriais2t) %>%
rename(F1 = X1,
F2 = X2) %>%
kable() %>%
kable_styling(bootstrap_options = "striped",
full_width = T,
font_size = 12)
if(sum(as.numeric(!pacotes %in% installed.packages())) != 0){
instalador <- pacotes[!pacotes %in% installed.packages()]
for(i in 1:length(instalador)) {
install.packages(instalador, dependencies = T)
break()}
sapply(pacotes, require, character = T)
} else {
sapply(pacotes, require, character = T)
}
data.frame(rowSums(cargas_fatoriais2 ^ 2)) %>%
rename(comunalidades = 1) %>%
kable() %>%
kable_styling(bootstrap_options = "striped",
full_width = T,
font_size = 12)
data.frame(rowSums(cargas_fatoriais2t ^ 2)) %>%
rename(comunalidades = 1) %>%
kable() %>%
kable_styling(bootstrap_options = "striped",
full_width = T,
font_size = 12)
# Relatório das cargas fatoriais e das comunalidades
data.frame(cargas_fatoriais2t) %>%
rename(F1 = X1,
F2 = X2) %>%
mutate(Comunalidades = rowSums(cargas_fatoriais2t ^ 2)) %>%
kable() %>%
kable_styling(bootstrap_options = "striped",
full_width = T,
font_size = 12)
# Plotagem das Cargas Fatoriais
data.frame(cargas_fatoriais2) %>%
ggplot(aes(x = X1, y = X2)) +
geom_point(color = "dodgerblue4") +
geom_hline(yintercept = 0, color = "darkgoldenrod3", linetype = "dashed") +
geom_vline(xintercept = 0, color = "darkgoldenrod3", linetype = "dashed") +
geom_text_repel(label = row.names(cargas_fatoriais2)) +
labs(x = paste("F1", paste0("(",
round(summary(pca_arquivo02)$importance[2,1] * 100,
digits = 2),
"%)")),
y = paste("F2", paste0("(",
round(summary(pca_arquivo02)$importance[2,2] * 100,
digits = 2),
"%)"))) +
theme_bw()
cargas_fatoriais2 <- pca_arquivo02$rotation[, 1:kpca_arquivo02] %*% diag(pca_arquivo02$sdev[1:kpca_arquivo02])
data.frame(cargas_fatoriais2) %>%
rename(F1 = X1,
F2 = X2) %>%
kable() %>%
kable_styling(bootstrap_options = "striped",
full_width = T,
font_size = 12)
data.frame(rowSums(cargas_fatoriais2 ^ 2)) %>%
rename(comunalidades = 1) %>%
kable() %>%
kable_styling(bootstrap_options = "striped",
full_width = T,
font_size = 12)
# Relatório das cargas fatoriais e das comunalidades
data.frame(cargas_fatoriais2) %>%
rename(F1 = X1,
F2 = X2) %>%
mutate(Comunalidades = rowSums(cargas_fatoriais2t ^ 2)) %>%
kable() %>%
kable_styling(bootstrap_options = "striped",
full_width = T,
font_size = 12)
# Relatório das cargas fatoriais e das comunalidades
data.frame(cargas_fatoriais2) %>%
rename(F1 = X1,
F2 = X2) %>%
mutate(Comunalidades = rowSums(cargas_fatoriais2 ^ 2)) %>%
kable() %>%
kable_styling(bootstrap_options = "striped",
full_width = T,
font_size = 12)
install.packages("data.table")
#Extraindo as Cargas Fatoriais
k <- sum((afpc_atlas$sdev ^ 2) > 1)
pacotes <- c("plotly","tidyverse","knitr","kableExtra","car","rgl","gridExtra",
"PerformanceAnalytics","reshape2","rayshader","psych","ggrepel",
"factoextra","sp","tmap","magick","gridExtra")
if(sum(as.numeric(!pacotes %in% installed.packages())) != 0){
instalador <- pacotes[!pacotes %in% installed.packages()]
for(i in 1:length(instalador)) {
install.packages(instalador, dependencies = T)
break()}
sapply(pacotes, require, character = T)
} else {
sapply(pacotes, require, character = T)
}
# Proposta de elaboração de um ranking e plotagem espacial ----------------
load("atlasambiental.RData")
# Apresentando a base de dados:
atlasambiental %>%
kable() %>%
kable_styling(bootstrap_options = "striped",
full_width = T,
font_size = 12)
# Analisando as correlações entre variáveis da base de dados atlasambiental
chart.Correlation(atlasambiental[, 3:11], histogram = TRUE, pch = "+")
# Salvando a Matriz de Correlações -----------------------------------
rho_atlas <- cor(atlasambiental[,3:11])
# Construindo um mapa de calor a partir das correlações
rho_atlas %>%
melt() %>%
ggplot() +
geom_tile(aes(x = Var1, y = Var2, fill = value)) +
geom_text(aes(x = Var1, y = Var2, label = round(x = value, digits = 3)),
size = 4) +
labs(x = NULL,
y = NULL,
fill = "Correlações") +
scale_fill_gradient2(low = "dodgerblue4",
mid = "white",
high = "brown4",
midpoint = 0) +
theme(panel.background = element_rect("white"),
panel.grid = element_line("grey95"),
panel.border = element_rect(NA),
legend.position = "bottom",
axis.text.x = element_text(angle = 0))
load("rho_arquivo01.RData")
rho_arquivo01
afpc <- prcomp(rho_arquivo02_std)
View(rho_aqruivo01)
rho_arquivo01 <- rho_aqruivo01
afpc <- prcomp(rho_arquivo02_std)
afpc <- prcomp(rho_arquivo01)
summary(rho_arquivo01)
summary(rho_arquivo01)
k_rho_arquivo01 <- sum((rho_arquivo01$sdev ^ 2) > 1) #número de variáveis presentes na base de dados -> número de fatores retido no critério da raiz latente
cargas_fatoriais_rho_arquivo02 <- rho_arquivo02$rotation[, 1:k_rho_arquivo02] %*% diag(rho_arquivo02$sdev[1:k_rho_arquivo02])
summary(rho_arquivo01)
summary(rho_arquivo01)
# Apresentando a base de dados:
rho_arquivo01 %>%
kable() %>%
kable_styling(bootstrap_options = "striped",
full_width = T,
font_size = 12)
notasfatorial_std <- notasfatorial %>%
column_to_rownames("estudante") %>%
scale() %>%
data.frame()
rho_arquivo01
load("rho_arquivo02.RData")
summary(rho_arquivo02)
cortest.bartlett(R = rho_arquivo02)
options(digits = 99)
options(scipen = 99)
cortest.bartlett(R = rho_arquivo02)
